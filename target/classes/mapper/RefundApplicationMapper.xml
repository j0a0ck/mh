<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pgyer.dao.RefundApplicationMapper" >
  <resultMap id="BaseResultMap" type="com.pgyer.entity.RefundApplication" >
    <id column="refund_id" property="refundId" jdbcType="INTEGER" />
    <result column="refund_reason" property="refundReason" jdbcType="VARCHAR" />
    <result column="refund_money" property="refundMoney" jdbcType="VARCHAR" />
    <result column="refund_content" property="refundContent" jdbcType="VARCHAR" />
    <result column="refund_agree" property="refundAgree" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    refund_id, refund_reason, refund_money, refund_content, refund_agree, order_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pgyer.entity.RefundApplicationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_refund_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_refund_application
    where refund_id = #{refundId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_refund_application
    where refund_id = #{refundId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pgyer.entity.RefundApplication" >
    insert into t_refund_application (refund_id, refund_reason, refund_money, 
      refund_content, refund_agree, order_id
      )
    values (#{refundId,jdbcType=INTEGER}, #{refundReason,jdbcType=VARCHAR}, #{refundMoney,jdbcType=VARCHAR}, 
      #{refundContent,jdbcType=VARCHAR}, #{refundAgree,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pgyer.entity.RefundApplication" >
    insert into t_refund_application
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="refundId != null" >
        refund_id,
      </if>
      <if test="refundReason != null" >
        refund_reason,
      </if>
      <if test="refundMoney != null" >
        refund_money,
      </if>
      <if test="refundContent != null" >
        refund_content,
      </if>
      <if test="refundAgree != null" >
        refund_agree,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="refundId != null" >
        #{refundId,jdbcType=INTEGER},
      </if>
      <if test="refundReason != null" >
        #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="refundMoney != null" >
        #{refundMoney,jdbcType=VARCHAR},
      </if>
      <if test="refundContent != null" >
        #{refundContent,jdbcType=VARCHAR},
      </if>
      <if test="refundAgree != null" >
        #{refundAgree,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pgyer.entity.RefundApplication" >
    update t_refund_application
    <set >
      <if test="refundReason != null" >
        refund_reason = #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="refundMoney != null" >
        refund_money = #{refundMoney,jdbcType=VARCHAR},
      </if>
      <if test="refundContent != null" >
        refund_content = #{refundContent,jdbcType=VARCHAR},
      </if>
      <if test="refundAgree != null" >
        refund_agree = #{refundAgree,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
    </set>
    where refund_id = #{refundId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pgyer.entity.RefundApplication" >
    update t_refund_application
    set refund_reason = #{refundReason,jdbcType=VARCHAR},
      refund_money = #{refundMoney,jdbcType=VARCHAR},
      refund_content = #{refundContent,jdbcType=VARCHAR},
      refund_agree = #{refundAgree,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=VARCHAR}
    where refund_id = #{refundId,jdbcType=INTEGER}
  </update>
</mapper>